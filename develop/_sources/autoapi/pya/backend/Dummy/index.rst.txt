:py:mod:`pya.backend.Dummy`
===========================

.. py:module:: pya.backend.Dummy


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pya.backend.Dummy.DummyBackend
   pya.backend.Dummy.DummyStream




.. py:class:: DummyBackend

   Bases: :py:obj:`pya.backend.base.BackendBase`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: dtype
      :annotation: = float32

      

   .. py:attribute:: range
      :annotation: = 1

      

   .. py:attribute:: bs
      :annotation: = 256

      

   .. py:method:: get_device_count()


   .. py:method:: get_device_info_by_index(idx)


   .. py:method:: get_default_input_device_info()


   .. py:method:: get_default_output_device_info()


   .. py:method:: open(*args, input_flag, output_flag, rate, frames_per_buffer, channels, stream_callback=None, **kwargs)


   .. py:method:: process_buffer(buffer)


   .. py:method:: terminate()



.. py:class:: DummyStream(input_flag, output_flag, frames_per_buffer, rate, channels, stream_callback)

   Bases: :py:obj:`pya.backend.base.StreamBase`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: stop_stream()


   .. py:method:: close()


   .. py:method:: _generate_data()


   .. py:method:: _process_data()


   .. py:method:: start_stream()


   .. py:method:: is_active()



