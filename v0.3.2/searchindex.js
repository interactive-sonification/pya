Search.setIndex({"docnames": ["autoapi/pya/Arecorder/index", "autoapi/pya/Aserver/index", "autoapi/pya/Asig/index", "autoapi/pya/Aspec/index", "autoapi/pya/Astft/index", "autoapi/pya/Ugen/index", "autoapi/pya/backend/Dummy/index", "autoapi/pya/backend/Jupyter/index", "autoapi/pya/backend/PyAudio/index", "autoapi/pya/backend/base/index", "autoapi/pya/backend/index", "autoapi/pya/helper/backend/index", "autoapi/pya/helper/codec/index", "autoapi/pya/helper/helpers/index", "autoapi/pya/helper/index", "autoapi/pya/index", "includeme", "index", "modules", "pya", "pya.backend", "pya.helper"], "filenames": ["autoapi/pya/Arecorder/index.rst", "autoapi/pya/Aserver/index.rst", "autoapi/pya/Asig/index.rst", "autoapi/pya/Aspec/index.rst", "autoapi/pya/Astft/index.rst", "autoapi/pya/Ugen/index.rst", "autoapi/pya/backend/Dummy/index.rst", "autoapi/pya/backend/Jupyter/index.rst", "autoapi/pya/backend/PyAudio/index.rst", "autoapi/pya/backend/base/index.rst", "autoapi/pya/backend/index.rst", "autoapi/pya/helper/backend/index.rst", "autoapi/pya/helper/codec/index.rst", "autoapi/pya/helper/helpers/index.rst", "autoapi/pya/helper/index.rst", "autoapi/pya/index.rst", "includeme.rst", "index.rst", "modules.rst", "pya.rst", "pya.backend.rst", "pya.helper.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.Arecorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.Aserver</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.Asig</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.Aspec</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.Astft</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.Ugen</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.backend.Dummy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.backend.Jupyter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.backend.PyAudio</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.backend.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.helper.backend</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.helper.codec</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.helper.helpers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya.helper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pya</span></code>", "pya", "pya", "modules", "pya package", "pya.backend package", "pya.helper package"], "terms": {"_logger": [0, 1, 2, 3, 4], "sr": [0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17], "44100": [0, 1, 2, 3, 5, 15, 16, 17], "b": [0, 1, 2, 6, 7, 8, 10, 15, 16, 17], "256": [0, 4, 6, 8, 10, 15], "devic": [0, 1, 13, 14, 15], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 15], "channel": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17], "backend": [0, 1, 12, 14, 15, 18, 19], "kwarg": [0, 1, 2, 3, 4, 6, 7, 9, 10, 12, 15], "base": [0, 1, 2, 5, 6, 7, 8, 10, 12, 13, 15, 18, 19], "aserv": [0, 2, 15, 16, 17, 18], "audio": [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 17], "record": [0, 15, 16, 17], "pyaudio": [0, 1, 10, 15, 16, 17, 18, 19], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "callback": [0, 1, 15], "save": [0, 2, 15], "data": [0, 1, 12, 13, 14, 15], "signal": [0, 2, 4, 5, 13, 14, 15], "asig": [0, 1, 3, 4, 5, 15, 18], "from": [0, 1, 2, 4, 12, 15, 16, 17], "import": [0, 1, 15, 16, 17], "time": [0, 2, 12, 13, 14, 15, 16, 17], "ar": [0, 2, 12, 15, 16, 17], "boot": [0, 1, 2, 15, 16, 17], "sleep": [0, 15], "1": [0, 1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 17], "stop": [0, 1, 2, 15], "print": [0, 1, 15], "x": [0, 1, 2, 3, 4, 13, 14, 15], "44100hz": [0, 1, 15], "properti": [0, 1, 2, 12, 15], "set_track": [0, 15], "track": [0, 15], "gain": [0, 2, 15, 16, 17], "defin": [0, 15, 16, 17], "number": [0, 2, 5, 12, 13, 14, 15, 16, 17], "paramet": [0, 1, 2, 3, 4, 5, 12, 13, 14, 15], "list": [0, 2, 3, 4, 5, 12, 15, 16, 17], "numpi": [0, 2, 13, 14, 15, 16, 17], "ndarrai": [0, 2, 13, 14, 15], "A": [0, 2, 12, 15], "input": [0, 1, 13, 14, 15], "indic": [0, 2, 15], "By": [0, 4, 15], "default": [0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17], "all": [0, 2, 12, 13, 15], "decibel": [0, 2, 15], "need": [0, 1, 2, 5, 15], "same": [0, 2, 15], "length": [0, 2, 12, 15], "reset": [0, 15], "_recorder_callback": [0, 15], "in_data": [0, 1, 15], "frame_count": [0, 1, 15], "time_info": [0, 1, 15], "flag": [0, 1, 15], "function": [0, 1, 2, 3, 4, 16, 17], "dure": [0, 15], "stream": [0, 1, 12, 15], "activ": [0, 1, 12, 15], "paus": [0, 15], "record_buff": [0, 15], "remain": [0, 15], "store": [0, 15, 16, 17], "__repr__": [0, 1, 2, 3, 4, 15], "return": [0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17], "repr": [0, 1, 3, 4, 15], "self": [0, 1, 2, 3, 4, 15], "2": [1, 2, 12, 13, 14, 15, 16, 17], "server": [1, 2, 15, 16, 17], "work": [1, 15, 16, 17], "fifo": [1, 15], "style": [1, 2, 15], "pipelin": [1, 15], "allow": [1, 2, 12, 15], "plai": [1, 2, 15], "send": [1, 12, 15], "segement": [1, 15], "ser": [1, 15], "blocksiz": [1, 12, 15], "true": [1, 2, 4, 8, 10, 15], "asin": [1, 15], "ugen": [1, 15, 16, 17, 18], "sine": [1, 5, 15, 16, 17], "000": [1, 15], "cn": [1, 2, 3, 4, 5, 15, 16, 17], "0": [1, 2, 5, 8, 10, 12, 13, 14, 15, 16, 17], "static": [1, 7, 15], "startup_default_serv": [1, 15], "shutdown_default_serv": [1, 15], "get_devic": [1, 15], "verbos": [1, 15], "fals": [1, 2, 4, 10, 11, 12, 15], "option": [1, 4, 15], "avail": [1, 5, 12, 13, 14, 15], "output": [1, 2, 12, 13, 14, 15], "set_devic": [1, 15], "idx": [1, 6, 7, 8, 10, 15], "reboot": [1, 15], "set": [1, 2, 3, 5, 12, 15, 16, 17], "int": [1, 2, 4, 5, 13, 14, 15], "index": [1, 2, 15, 17], "bool": [1, 2, 15], "If": [1, 2, 5, 15], "valu": [1, 2, 3, 4, 5, 13, 14, 15, 16, 17], "start": [1, 8, 10, 15], "its": [1, 2, 12, 15], "thi": [1, 2, 12, 13, 14, 15, 16, 17], "quit": [1, 15], "termin": [1, 6, 7, 8, 9, 10, 15], "pa": [1, 15], "onset": [1, 2, 15, 16, 17], "out": [1, 2, 12, 15], "dispatch": [1, 15], "arrai": [1, 2, 12, 13, 14, 15, 16, 17], "given": [1, 2, 12, 13, 14, 15], "_play_callback": [1, 15], "call": [1, 2, 15], "pastream": [1, 15], "thread": [1, 12, 15], "when": [1, 2, 12, 13, 14, 15], "__del__": [1, 12, 15], "sig": [2, 13, 14, 15, 16, 17], "label": [2, 3, 4, 5, 15, 16, 17], "enabl": [2, 15], "manipul": [2, 15, 16, 17], "more": [2, 15], "offer": [2, 15, 16, 17], "plot": [2, 3, 4, 15], "via": [2, 15, 16, 17], "matplotlib": [2, 3, 4, 15], "can": [2, 4, 12, 15, 16, 17], "mono": [2, 15], "multichannel": [2, 15], "type": [2, 3, 4, 5, 13, 14, 15], "sampl": [2, 4, 5, 12, 13, 14, 15, 16, 17], "rate": [2, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17], "string": [2, 5, 13, 14, 15, 16, 17], "give": [2, 15], "object": [2, 5, 12, 15, 16, 17], "uniqu": [2, 15], "identifi": [2, 5, 15, 16, 17], "str": [2, 4, 15], "short": [2, 12, 15, 16, 17], "name": [2, 4, 5, 12, 15, 16, 17], "i": [2, 4, 5, 12, 13, 14, 15], "size": [2, 5, 15], "each": [2, 12, 15], "subset": [2, 15], "readibl": [2, 15], "wai": [2, 6, 7, 8, 9, 10, 15, 16, 17], "e": [2, 4, 15, 16, 17], "g": [2, 15, 16, 17], "left": [2, 15, 16, 17], "front": [2, 15], "mix_mod": [2, 15], "extend": [2, 15], "__setitem__": [2, 15], "oper": [2, 15], "frequent": [2, 15], "mix": [2, 15], "boundari": [2, 4, 15], "replac": [2, 15], "current": [2, 5, 15], "support": [2, 15, 16, 17], "bound": [2, 15], "overwrit": [2, 4, 15], "should": [2, 12, 15, 16, 17], "directli": [2, 15], "temporarilti": [2, 15], "getter": [2, 15], "mode": [2, 15], "destin": [2, 15], "assign": [2, 4, 15], "through": [2, 12, 15], "setitem": [2, 15], "truncat": [2, 15], "sourc": [2, 15, 16, 17], "limit": [2, 15], "o": [2, 15], "cut": [2, 15], "target": [2, 12, 13, 14, 15], "select": [2, 15], "_load_audio_fil": [2, 15], "fname": [2, 15], "load": [2, 13, 14, 15, 16, 17], "file": [2, 12, 15, 16, 17], "two": [2, 5, 15], "loader": [2, 15], "standard": [2, 6, 7, 8, 9, 10, 12, 15], "librari": [2, 12, 15], "wav": [2, 12, 13, 14, 15, 16, 17], "aiff": [2, 12, 15], "ffmpeg": [2, 12, 15, 16, 17], "other": [2, 12, 15, 16, 17], "mp3": [2, 15, 16, 17], "path": [2, 13, 14, 15, 16, 17], "save_wavfil": [2, 15], "dtype": [2, 6, 7, 10, 13, 14, 15], "float32": [2, 6, 7, 10, 13, 14, 15], "datatyp": [2, 15], "_set_col_nam": [2, 15], "__getitem__": [2, 15], "access": [2, 15], "element": [2, 15], "slice": [2, 15, 16, 17], "get": [2, 15, 16, 17], "row": [2, 15], "4": [2, 5, 12, 13, 14, 15, 16, 17], "rang": [2, 3, 4, 6, 7, 10, 13, 14, 15], "step": [2, 15], "40": [2, 15], "everi": [2, 15], "6": [2, 15, 16, 17], "pick": [2, 15], "new": [2, 15, 16, 17], "tupl": [2, 3, 4, 15], "column": [2, 15, 16, 17], "specif": [2, 4, 15], "3": [2, 12, 15, 16, 17], "5": [2, 5, 8, 10, 15, 16, 17], "unit": [2, 5, 15, 16, 17], "second": [2, 5, 12, 13, 14, 15, 16, 17], "dict": [2, 15], "creat": [2, 4, 5, 6, 7, 8, 9, 10, 15], "l": [2, 15], "rear": [2, 15], "etc": [2, 15], "argument": [2, 3, 4, 12, 15, 16, 17], "method": [2, 12, 13, 14, 15], "getitem": [2, 15], "string_list": [2, 15], "filter": [2, 15], "In": [2, 15], "addit": [2, 4, 15], "possibl": [2, 15, 16, 17], "refer": [2, 4, 15, 17], "dest": [2, 15], "src": [2, 15], "python": [2, 12, 15, 16, 17], "und": [2, 15], "dimens": [2, 15], "match": [2, 5, 15], "where": [2, 15], "copi": [2, 15], "up": [2, 12, 15], "dynam": [2, 15], "make": [2, 12, 15], "space": [2, 15], "specifi": [2, 15, 16, 17], "regardless": [2, 15], "7": [2, 15, 16, 17], "8": [2, 15, 16, 17], "singl": [2, 15], "so": [2, 15, 16, 17], "extra": [2, 15], "100": [2, 15, 16, 17], "5000": [2, 15], "onli": [2, 5, 15], "_": [2, 3, 4, 13, 14, 15], "updat": [2, 15], "resampl": [2, 15], "target_sr": [2, 15], "kind": [2, 3, 15], "linear": [2, 3, 13, 14, 15], "interpol": [2, 15], "process": [2, 3, 12, 15, 16, 17], "float": [2, 5, 12, 13, 14, 15, 16, 17], "speed": [2, 15], "slow": [2, 15], "down": [2, 15], "exist": [2, 15], "propag": [2, 15], "playback": [2, 15, 16, 17], "which": [2, 12, 15, 16, 17], "": [2, 4, 12, 13, 14, 15, 16, 17], "shift_channel": [2, 15], "shift": [2, 15], "particular": [2, 15], "doe": [2, 15], "noth": [2, 15], "being": [2, 4, 15], "rout": [2, 15], "posit": [2, 12, 15], "right": [2, 15], "first": [2, 12, 15, 16, 17], "discard": [2, 12, 15], "amount": [2, 13, 14, 15], "rerout": [2, 15], "blend": [2, 15], "perform": [2, 4, 12, 15], "np": [2, 3, 13, 14, 15, 16, 17], "sum": [2, 15], "sig_copi": [2, 15], "axi": [2, 3, 4, 15], "multipli": [2, 15], "do": [2, 15, 16, 17], "alreadi": [2, 15], "rais": [2, 5, 12, 15, 16, 17], "warn": [2, 15], "stereo": [2, 15], "applic": [2, 15, 16, 17], "ani": [2, 12, 15], "multi": [2, 13, 14, 15, 16, 17], "usag": [2, 15], "For": [2, 15, 16, 17], "g1": [2, 15], "g2": [2, 15], "broadcat": [2, 15], "adjust": [2, 15], "result": [2, 13, 14, 15], "equal": [2, 15], "distribut": [2, 15, 16, 17], "exampl": 2, "c1": [2, 15], "c2": [2, 15], "c3": [2, 15], "707": [2, 15], "center": [2, 15], "note": [2, 15, 16, 17], "loud": [2, 15], "rewir": [2, 15], "dic": [2, 15], "flexibli": [2, 15], "weight": [2, 3, 15], "permut": [2, 15], "kei": [2, 15, 16, 17], "amplitud": [2, 5, 13, 14, 15], "leav": [2, 15], "unmodifi": [2, 15], "pan2": [2, 15], "pan": [2, 15], "constant": [2, 15], "power": [2, 15], "see": [2, 15, 16, 17], "below": [2, 15], "behavior": [2, 15], "depend": [2, 15], "nr": [2, 15], "back": [2, 15], "treat": [2, 15], "channelwis": [2, 15], "attenu": [2, 15], "co": [2, 5, 15, 16, 17], "angl": [2, 15], "sin": [2, 15, 16, 17], "between": [2, 15], "remove_dc": [2, 15], "remov": [2, 15], "dc": [2, 15], "offset": [2, 15], "free": [2, 15], "norm": [2, 15], "in_db": [2, 15], "dcflag": [2, 15], "normal": [2, 13, 14, 15], "threshold": [2, 15], "take": [2, 15], "db": [2, 13, 14, 15, 16, 17], "amp": [2, 5, 13, 14, 15, 16, 17], "appli": [2, 15], "one": [2, 5, 13, 14, 15], "either": [2, 12, 15], "scalar": [2, 15], "individu": [2, 15], "The": [2, 5, 12, 13, 14, 15, 16, 17], "rm": [2, 15], "mean": [2, 15], "fn": [2, 3, 4, 15], "scale": [2, 15], "xlim": [2, 3, 4, 15], "ylim": [2, 3, 4, 15], "displai": [2, 15, 16, 17], "graph": [2, 15], "func": [2, 3, 4, 15], "keyword": [2, 3, 12, 15], "stack": [2, 15], "view": [2, 15], "y": [2, 3, 13, 14, 15], "pyplot": [2, 3, 15], "you": [2, 4, 12, 15, 16, 17], "plt": [2, 15], "show": [2, 15], "get_dur": [2, 15], "durat": [2, 5, 12, 15], "get_tim": [2, 15], "stamp": [2, 15], "edg": [2, 15], "hold": [2, 15], "__eq__": [2, 15], "check": [2, 12, 15, 16, 17], "have": [2, 15], "But": [2, 15, 16, 17], "care": [2, 15], "about": [2, 13, 14, 15], "report": [2, 15], "__mul__": [2, 15], "magic": [2, 15], "an": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15], "mulipli": [2, 15], "don": [2, 15], "t": [2, 15], "alwai": [2, 15, 16, 17], "mai": [2, 12, 15, 16, 17], "differ": [2, 15], "fix": [2, 15], "respect": [2, 12, 15], "whichev": [2, 15], "bigger": [2, 15], "__rmul__": [2, 15], "__truediv__": [2, 15], "divis": [2, 15], "divid": [2, 15], "caution": [2, 15], "common": [2, 13, 15, 16, 17], "reach": [2, 15], "avoid": [2, 15], "zero": [2, 4, 15, 16, 17], "extrem": [2, 15], "larg": [2, 15], "__rtruediv__": [2, 15], "__add__": [2, 15], "ad": [2, 15], "add": [2, 15], "__radd__": [2, 15], "__sub__": [2, 15], "subtract": [2, 15], "minu": [2, 15], "__rsub__": [2, 15], "find_ev": [2, 15], "step_dur": [2, 15], "001": [2, 15], "sil_thr": [2, 15], "20": [2, 15], "evt_min_dur": [2, 15], "sil_min_dur": [2, 15], "sil_pad": [2, 15], "locat": [2, 15], "meaning": [2, 15], "event": [2, 15], "detect": [2, 12, 15], "search": [2, 15, 17], "silent": [2, 15], "minimum": [2, 13, 14, 15], "count": [2, 15], "small": [2, 15], "befor": [2, 15], "after": [2, 15], "actual": [2, 15], "found": [2, 12, 15], "pad": [2, 4, 15], "select_ev": [2, 15], "aka": [2, 15], "plot_ev": [2, 15], "fade_in": [2, 15, 16, 17], "dur": [2, 5, 15, 16, 17], "curv": [2, 3, 15], "fade": [2, 15], "begin": [2, 15], "curvatur": [2, 15], "fader": [2, 15], "linspac": [2, 15, 16, 17], "fade_out": [2, 15, 16, 17], "end": [2, 15], "iirfilt": [2, 15], "cutoff_freq": [2, 15], "btype": [2, 15], "bandpass": [2, 15], "ftype": [2, 15], "butter": [2, 15], "order": [2, 15], "lfilter": [2, 15], "rp": [2, 15], "r": [2, 15], "scipi": [2, 4, 15], "cutoff": [2, 15], "frequenc": [2, 4, 5, 13, 14, 15], "tthe": [2, 15], "iir": [2, 15], "cheby1": [2, 15], "cheby2": [2, 15], "elip": [2, 15], "bessel": [2, 15], "coeff": [2, 15], "dimension": [2, 15], "chebyshev": [2, 15], "ellipt": [2, 15], "provid": [2, 6, 7, 8, 9, 10, 15, 16, 17], "maximum": [2, 13, 14, 15], "rippl": [2, 15], "passband": [2, 15], "band": [2, 15], "also": [2, 4, 15, 16, 17], "coeffici": [2, 15], "plot_freqz": [2, 15], "worn": [2, 15], "respons": [2, 15], "digit": [2, 15], "freqz": [2, 15], "todo": [2, 3, 15], "param": [2, 15], "envelop": [2, 15], "break": [2, 15], "point": [2, 13, 14, 15], "affect": [2, 15], "ramp": [2, 15], "adsr": [2, 15], "att": [2, 15], "dec": [2, 15], "su": [2, 15], "rel": [2, 15], "evelop": [2, 15], "attack": [2, 15], "decai": [2, 15], "sustain": [2, 15], "releas": [2, 15], "window": [2, 4, 15, 16, 17], "win": [2, 15], "triang": [2, 15], "get_window": [2, 15], "avaiabl": [2, 15], "window_op": [2, 15], "nperseg": [2, 4, 15], "64": [2, 15], "stride": [2, 15], "32": [2, 13, 14, 15], "mirror": [2, 15], "docstr": [2, 15], "overlap_add": [2, 15], "stride_in": [2, 15], "stride_out": [2, 15], "jitter_in": [2, 15], "jitter_out": [2, 15], "to_spec": [2, 15, 16, 17], "aspec": [2, 15, 16, 17, 18], "rfft": [2, 3, 15, 16, 17], "to_stft": [2, 15, 16, 17], "astft": [2, 15, 16, 17, 18], "stft": [2, 4, 15, 16, 17], "plot_spectrum": [2, 15, 16, 17], "spectrum": [2, 3, 13, 14, 15, 16, 17], "better": [2, 15], "y_axi": [2, 4, 15], "x_axi": [2, 4, 15], "spectrogram": [2, 4, 15, 16, 17], "argv": [2, 15], "kvarg": [2, 15], "sicpi": [2, 15], "get_siz": [2, 15], "shape": [2, 15], "append": [2, 12, 15, 16, 17], "apppend": [2, 15], "anoth": [2, 15], "condit": [2, 15], "ha": [2, 15, 16, 17], "orgin": [2, 15], "aplitud": [2, 15], "po": [2, 15], "postion": [2, 15], "similar": [2, 15], "rather": [2, 15], "custom": [2, 15, 16, 17], "to_sig": [3, 4, 15], "convert": [3, 4, 13, 14, 15], "freq": [3, 5, 15, 16, 17], "ab": [3, 15], "hann": [4, 15], "noverlap": [4, 15], "nfft": [4, 15], "detrend": [4, 15], "return_onesid": [4, 15], "With": [4, 15], "istft": [4, 15], "keyboard": [4, 15], "input_onesid": [4, 15], "f": [4, 15], "sinc": [4, 15], "lambda": [4, 15], "ch": [4, 15], "ax": [4, 15], "bypass": [4, 15], "your": [4, 15, 16, 17], "keyward": [4, 15], "pcolormesh": [4, 15], "get_num_of_row": 5, "n_row": [5, 15], "total": [5, 13, 14, 15], "num_sampl": [5, 15], "both": 5, "attributeerror": 5, "gener": [5, 12, 15, 16, 17], "predefin": [5, 15], "440": [5, 15, 16, 17], "cosin": [5, 15], "squar": [5, 15, 16, 17], "duti": [5, 15], "sample_shift": [5, 15], "wave": [5, 12, 15], "cycl": [5, 13, 14, 15], "sawtooth": [5, 15], "width": [5, 12, 15], "tooth": [5, 15], "nois": [5, 15, 16, 17], "white": [5, 15], "pink": [5, 15], "dummybackend": [6, 10, 15], "dummy_devic": [6, 10, 15], "backendbas": [6, 7, 8, 9, 10, 15], "helper": [6, 7, 8, 9, 10, 15, 16, 17, 18, 19], "abc": [6, 7, 8, 9, 10, 15], "inherit": [6, 7, 8, 9, 10, 15], "get_device_count": [6, 7, 8, 9, 10, 15], "get_device_info_by_index": [6, 7, 8, 9, 10, 15], "get_default_input_device_info": [6, 7, 8, 9, 10, 15], "get_default_output_device_info": [6, 7, 8, 9, 10, 15], "open": [6, 7, 8, 9, 10, 15], "arg": [6, 7, 9, 10, 12, 15], "input_flag": [6, 8, 10, 15], "output_flag": [6, 8, 10, 15], "frames_per_buff": [6, 8, 10, 15], "stream_callback": [6, 7, 8, 10, 15], "process_buff": [6, 7, 8, 9, 10, 15], "buffer": [6, 7, 8, 10, 13, 14, 15], "dummystream": 6, "streambas": [6, 7, 9], "stop_stream": [6, 7, 9], "close": [6, 7, 9, 12], "_generate_data": 6, "_process_data": 6, "start_stream": [6, 7, 9], "is_act": [6, 7, 9], "jupyterbackend": 7, "port": [7, 10, 11, 15], "8765": [7, 10, 11, 15], "proxy_suffix": 7, "4096": [7, 12], "jupyterstream": 7, "set_buffer_threshold": 7, "buffer_limit": 7, "pyaudiobackend": [8, 10, 15], "format": [8, 10, 13, 14, 15], "pafloat32": [8, 10, 15], "_boot_delai": [8, 10, 15], "input_device_index": [8, 10, 15], "output_device_index": [8, 10, 15], "input_host_api_specific_stream_info": [8, 10, 15], "output_host_api_specific_stream_info": [8, 10, 15], "abstract": 9, "dummi": [10, 15, 18, 19], "jupyt": [10, 15], "determine_backend": [10, 11, 15], "force_webaudio": [10, 11, 15], "get_server_info": 11, "command": 12, "avconv": 12, "proc_flag": 12, "134217728": 12, "target_width": 12, "supported_width": 12, "except": [12, 13], "decodeerror": 12, "decod": 12, "error": [12, 16, 17], "packag": [12, 16, 17, 18], "nobackenderror": 12, "could": 12, "fail": 12, "unsupportederror": 12, "au": 12, "bitwidtherror": 12, "unsupport": 12, "bit": [12, 13, 14, 15], "ffmpegerror": 12, "communicationerror": 12, "parseabl": 12, "notinstallederror": 12, "find": 12, "binari": [12, 16, 17], "readtimeouterror": 12, "read": 12, "line": 12, "tool": 12, "byteswap": 12, "swap": 12, "endian": 12, "bytest": 12, "must": 12, "16": 12, "sign": 12, "integ": [12, 13, 14, 15], "probabl": 12, "less": 12, "effici": 12, "than": [12, 16, 17], "rawaudiofil": 12, "filenam": 12, "aifc": 12, "sunau": 12, "sampler": 12, "hz": [12, 16, 17], "_check": 12, "u": [12, 16, 17], "otherwis": 12, "underli": 12, "read_data": 12, "block_sampl": 12, "1024": [12, 16, 17], "block": [12, 13, 14, 15], "pcm": 12, "__enter__": 12, "__exit__": 12, "exc_typ": 12, "exc_val": 12, "exc_tb": 12, "__iter__": 12, "queuereaderthread": 12, "fh": 12, "consum": 12, "filehandl": 12, "over": 12, "queue": 12, "run": 12, "repres": 12, "overrid": 12, "subclass": [12, 16, 17], "invok": 12, "callabl": 12, "pass": 12, "constructor": 12, "sequenti": 12, "taken": 12, "popen_multipl": 12, "command_arg": 12, "like": 12, "subprocess": 12, "popen": 12, "try": [12, 16, 17], "multipl": 12, "case": 12, "some": 12, "iter": 12, "rest": 12, "full": 12, "ffmpeg_avail": 12, "whether": 12, "system": [12, 16, 17], "windows_error_mode_lock": 12, "ffmpegaudiofil": 12, "block_siz": 12, "util": 12, "timeout": 12, "10": 12, "raw": 12, "_get_info": 12, "stderr": 12, "extract": 12, "relev": 12, "inform": 12, "pars": 12, "_parse_info": 12, "field": 12, "available_backend": 12, "audio_read": 12, "fp": 12, "_error": 13, "class": [13, 16, 17], "non": [13, 16, 17], "exit": 13, "linlin": [13, 14, 15], "smi": [13, 14, 15], "sma": [13, 14, 15], "dmi": [13, 14, 15], "dma": [13, 14, 15], "map": [13, 14, 15], "midicp": [13, 14, 15], "m": [13, 14, 15], "midi": [13, 14, 15], "per": [13, 14, 15], "cpsmidi": [13, 14, 15], "c": [13, 14, 15, 16, 17], "clip": [13, 14, 15], "inf": [13, 14, 15], "hard": [13, 14, 15], "dbamp": [13, 14, 15], "ampdb": [13, 14, 15, 16, 17], "matrix": [13, 14, 15], "frq": [13, 14, 15], "fft": [13, 14, 15], "d": [13, 14, 15], "audio_from_fil": [13, 14, 15], "audioread": [13, 14, 15], "concaten": [13, 14, 15], "buf_to_float": [13, 14, 15], "n_byte": [13, 14, 15], "primarili": [13, 14, 15], "seealso": [13, 14, 15], "byte": [13, 14, 15], "numer": [13, 14, 15], "x_float": [13, 14, 15], "cast": [13, 14, 15], "device_info": [13, 14, 15, 16, 17], "info": [13, 14, 15], "find_devic": [13, 14, 15], "min_input": [13, 14, 15], "min_output": [13, 14, 15], "codec": [14, 15, 18, 19], "collect": 15, "notebook": 15, "synthesi": [15, 16, 17], "effect": 15, "analysi": [15, 16, 17], "arecord": [15, 16, 17, 18], "attribut": [15, 16, 17], "startup": 15, "shutdown": 15, "creation": [16, 17], "It": [16, 17], "comput": [16, 17], "document": [16, 17], "ipynb": [16, 17], "quick": [16, 17], "tutori": [16, 17], "code": [16, 17], "http": [16, 17], "github": [16, 17], "com": [16, 17], "interact": [16, 17], "sonif": [16, 17], "versatil": [16, 17], "swatooth": [16, 17], "queu": [16, 17], "real": [16, 17], "impli": [16, 17], "term": [16, 17], "fourier": [16, 17], "transform": [16, 17], "auditori": [16, 17], "sound": [16, 17], "experi": [16, 17], "game": [16, 17], "gui": [16, 17], "enhanc": [16, 17], "At": [16, 17], "suitabl": [16, 17], "offlin": [16, 17], "render": [16, 17], "realtim": [16, 17], "thoma": [16, 17], "hermann": [16, 17], "ambient": [16, 17], "intellig": [16, 17], "group": [16, 17], "faculti": [16, 17], "technologi": [16, 17], "bielefeld": [16, 17], "univers": [16, 17], "maintain": [16, 17], "jiajun": [16, 17], "yang": [16, 17], "alexand": [16, 17], "neumann": [16, 17], "neurocognit": [16, 17], "action": [16, 17], "biomechan": [16, 17], "acknowledg": [16, 17], "here": [16, 17], "welcom": [16, 17], "pip": [16, 17], "11": [16, 17], "yet": [16, 17], "fulli": [16, 17], "encount": [16, 17], "issu": [16, 17], "portaudio": [16, 17], "solut": [16, 17], "anaconda": [16, 17], "easiest": [16, 17], "would": [16, 17], "conda": [16, 17], "mac": [16, 17], "user": [16, 17], "brew": [16, 17], "beforehand": [16, 17], "linux": [16, 17], "sudo": [16, 17], "apt": [16, 17], "portaudio19": [16, 17], "dev": [16, 17], "equival": [16, 17], "distro": [16, 17], "wheel": [16, 17], "www": [16, 17], "lfd": [16, 17], "uci": [16, 17], "edu": [16, 17], "gohlk": [16, 17], "pythonlib": [16, 17], "Then": [16, 17], "peopl": [16, 17], "csail": [16, 17], "mit": [16, 17], "hubert": [16, 17], "download": [16, 17], "tone": [16, 17], "signal_arrai": [16, 17], "pi": [16, 17], "aton": [16, 17], "asig_int": [16, 17], "asig_float": [16, 17], "asig_str": [16, 17], "song": [16, 17], "asig_ugen": [16, 17], "waveform": [16, 17], "without": [16, 17], "On": [16, 17], "latest": [16, 17], "zerano": [16, 17], "build": [16, 17], "unzip": [16, 17], "folder": [16, 17], "prefer": [16, 17], "bin": [16, 17], "variabl": [16, 17], "how": [16, 17], "chang": [16, 17], "contain": [16, 17], "1000": [16, 17], "magnitud": [16, 17], "phase": [16, 17], "a1": [16, 17], "usual": [16, 17], "lw": [16, 17], "pleas": [16, 17], "detail": [16, 17], "touch": [16, 17], "wish": [16, 17], "we": [16, 17], "happi": [16, 17], "involv": [16, 17], "discuss": [16, 17], "featur": [16, 17], "receiv": [16, 17], "pull": [16, 17], "request": [16, 17], "api": 17, "modul": 17, "page": 17, "pya": 18, "subpackag": 18, "submodul": 18, "content": 18, "version": 18}, "objects": {"": [[15, 0, 0, "-", "pya"]], "pya": [[15, 1, 1, "", "Arecorder"], [0, 0, 0, "-", "Arecorder"], [15, 1, 1, "", "Aserver"], [1, 0, 0, "-", "Aserver"], [15, 1, 1, "", "Asig"], [2, 0, 0, "-", "Asig"], [15, 1, 1, "", "Aspec"], [3, 0, 0, "-", "Aspec"], [15, 1, 1, "", "Astft"], [4, 0, 0, "-", "Astft"], [15, 1, 1, "", "DummyBackend"], [15, 1, 1, "", "PyAudioBackend"], [15, 1, 1, "", "Ugen"], [5, 0, 0, "-", "Ugen"], [15, 6, 1, "", "ampdb"], [15, 6, 1, "", "audio_from_file"], [10, 0, 0, "-", "backend"], [15, 6, 1, "", "buf_to_float"], [15, 6, 1, "", "clip"], [15, 6, 1, "", "cpsmidi"], [15, 6, 1, "", "dbamp"], [15, 6, 1, "", "determine_backend"], [15, 6, 1, "", "device_info"], [15, 6, 1, "", "find_device"], [14, 0, 0, "-", "helper"], [15, 6, 1, "", "linlin"], [15, 6, 1, "", "midicps"], [15, 6, 1, "", "normalize"], [15, 6, 1, "", "shutdown"], [15, 6, 1, "", "spectrum"], [15, 6, 1, "", "startup"]], "pya.Arecorder": [[0, 1, 1, "", "Arecorder"], [0, 4, 1, "", "_LOGGER"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "_recorder_callback"], [15, 2, 1, "", "boot"], [15, 3, 1, "", "device"], [15, 2, 1, "", "pause"], [15, 2, 1, "", "record"], [15, 2, 1, "", "reset"], [15, 2, 1, "", "set_tracks"], [15, 2, 1, "", "stop"]], "pya.Arecorder.Arecorder": [[0, 2, 1, "", "__repr__"], [0, 2, 1, "", "_recorder_callback"], [0, 2, 1, "", "boot"], [0, 3, 1, "", "device"], [0, 2, 1, "", "pause"], [0, 2, 1, "", "record"], [0, 2, 1, "", "reset"], [0, 2, 1, "", "set_tracks"], [0, 2, 1, "", "stop"]], "pya.Aserver": [[1, 1, 1, "", "Aserver"], [1, 4, 1, "", "_LOGGER"], [15, 2, 1, "", "__del__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "_play_callback"], [15, 2, 1, "", "boot"], [15, 5, 1, "", "default"], [15, 3, 1, "", "device"], [15, 2, 1, "", "get_devices"], [15, 2, 1, "", "play"], [15, 2, 1, "", "quit"], [15, 2, 1, "", "set_device"], [15, 2, 1, "", "shutdown_default_server"], [15, 2, 1, "", "startup_default_server"], [15, 2, 1, "", "stop"]], "pya.Aserver.Aserver": [[1, 2, 1, "", "__del__"], [1, 2, 1, "", "__repr__"], [1, 2, 1, "", "_play_callback"], [1, 2, 1, "", "boot"], [1, 5, 1, "", "default"], [1, 3, 1, "", "device"], [1, 2, 1, "", "get_devices"], [1, 2, 1, "", "play"], [1, 2, 1, "", "quit"], [1, 2, 1, "", "set_device"], [1, 2, 1, "", "shutdown_default_server"], [1, 2, 1, "", "startup_default_server"], [1, 2, 1, "", "stop"]], "pya.Asig": [[2, 1, 1, "", "Asig"], [2, 4, 1, "", "_LOGGER"], [15, 2, 1, "", "__add__"], [15, 2, 1, "", "__eq__"], [15, 2, 1, "", "__getitem__"], [15, 2, 1, "", "__mul__"], [15, 2, 1, "", "__radd__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__rmul__"], [15, 2, 1, "", "__rsub__"], [15, 2, 1, "", "__rtruediv__"], [15, 2, 1, "", "__setitem__"], [15, 2, 1, "", "__sub__"], [15, 2, 1, "", "__truediv__"], [15, 2, 1, "", "_load_audio_file"], [15, 2, 1, "", "_set_col_names"], [15, 2, 1, "", "add"], [15, 2, 1, "", "adsr"], [15, 2, 1, "", "append"], [15, 3, 1, "", "b"], [15, 5, 1, "", "bound"], [15, 3, 1, "id0", "channels"], [15, 3, 1, "id1", "cn"], [15, 2, 1, "", "custom"], [15, 2, 1, "", "envelope"], [15, 5, 1, "", "extend"], [15, 2, 1, "", "fade_in"], [15, 2, 1, "", "fade_out"], [15, 2, 1, "", "find_events"], [15, 2, 1, "", "gain"], [15, 2, 1, "", "get_duration"], [15, 2, 1, "", "get_size"], [15, 2, 1, "", "get_times"], [15, 2, 1, "", "iirfilter"], [15, 5, 1, "", "label"], [15, 5, 1, "", "mix_mode"], [15, 2, 1, "", "mono"], [15, 2, 1, "", "norm"], [15, 3, 1, "", "o"], [15, 2, 1, "", "overlap_add"], [15, 5, 1, "", "overwrite"], [15, 2, 1, "", "pan2"], [15, 2, 1, "", "play"], [15, 2, 1, "", "plot"], [15, 2, 1, "", "plot_events"], [15, 2, 1, "", "plot_freqz"], [15, 2, 1, "", "plot_spectrum"], [15, 2, 1, "", "remove_DC"], [15, 2, 1, "", "resample"], [15, 2, 1, "", "rewire"], [15, 2, 1, "", "rms"], [15, 3, 1, "", "samples"], [15, 2, 1, "", "save_wavfile"], [15, 2, 1, "", "select_event"], [15, 2, 1, "", "shift_channel"], [15, 5, 1, "", "sig"], [15, 2, 1, "", "spectrogram"], [15, 5, 1, "", "sr"], [15, 2, 1, "", "stereo"], [15, 2, 1, "", "to_spec"], [15, 2, 1, "", "to_stft"], [15, 2, 1, "", "window"], [15, 2, 1, "", "window_op"], [15, 3, 1, "", "x"]], "pya.Asig.Asig": [[2, 2, 1, "", "__add__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__getitem__"], [2, 2, 1, "", "__mul__"], [2, 2, 1, "", "__radd__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "__rmul__"], [2, 2, 1, "", "__rsub__"], [2, 2, 1, "", "__rtruediv__"], [2, 2, 1, "", "__setitem__"], [2, 2, 1, "", "__sub__"], [2, 2, 1, "", "__truediv__"], [2, 2, 1, "", "_load_audio_file"], [2, 2, 1, "", "_set_col_names"], [2, 2, 1, "", "add"], [2, 2, 1, "", "adsr"], [2, 2, 1, "", "append"], [2, 3, 1, "", "b"], [2, 5, 1, "", "bound"], [2, 3, 1, "id0", "channels"], [2, 3, 1, "id1", "cn"], [2, 2, 1, "", "custom"], [2, 2, 1, "", "envelope"], [2, 5, 1, "", "extend"], [2, 2, 1, "", "fade_in"], [2, 2, 1, "", "fade_out"], [2, 2, 1, "", "find_events"], [2, 2, 1, "", "gain"], [2, 2, 1, "", "get_duration"], [2, 2, 1, "", "get_size"], [2, 2, 1, "", "get_times"], [2, 2, 1, "", "iirfilter"], [2, 5, 1, "", "label"], [2, 5, 1, "", "mix_mode"], [2, 2, 1, "", "mono"], [2, 2, 1, "", "norm"], [2, 3, 1, "", "o"], [2, 2, 1, "", "overlap_add"], [2, 5, 1, "", "overwrite"], [2, 2, 1, "", "pan2"], [2, 2, 1, "", "play"], [2, 2, 1, "", "plot"], [2, 2, 1, "", "plot_events"], [2, 2, 1, "", "plot_freqz"], [2, 2, 1, "", "plot_spectrum"], [2, 2, 1, "", "remove_DC"], [2, 2, 1, "", "resample"], [2, 2, 1, "", "rewire"], [2, 2, 1, "", "rms"], [2, 3, 1, "", "samples"], [2, 2, 1, "", "save_wavfile"], [2, 2, 1, "", "select_event"], [2, 2, 1, "", "shift_channel"], [2, 5, 1, "", "sig"], [2, 2, 1, "", "spectrogram"], [2, 5, 1, "", "sr"], [2, 2, 1, "", "stereo"], [2, 2, 1, "", "to_spec"], [2, 2, 1, "", "to_stft"], [2, 2, 1, "", "window"], [2, 2, 1, "", "window_op"], [2, 3, 1, "", "x"]], "pya.Aspec": [[3, 1, 1, "", "Aspec"], [3, 4, 1, "", "_LOGGER"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "plot"], [15, 2, 1, "", "to_sig"], [15, 2, 1, "", "weight"]], "pya.Aspec.Aspec": [[3, 2, 1, "", "__repr__"], [3, 2, 1, "", "plot"], [3, 2, 1, "", "to_sig"], [3, 2, 1, "", "weight"]], "pya.Astft": [[4, 1, 1, "", "Astft"], [4, 4, 1, "", "_LOGGER"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "plot"], [15, 2, 1, "", "to_sig"]], "pya.Astft.Astft": [[4, 2, 1, "", "__repr__"], [4, 2, 1, "", "plot"], [4, 2, 1, "", "to_sig"]], "pya.DummyBackend": [[15, 5, 1, "", "bs"], [15, 5, 1, "", "dtype"], [15, 2, 1, "", "get_default_input_device_info"], [15, 2, 1, "", "get_default_output_device_info"], [15, 2, 1, "", "get_device_count"], [15, 2, 1, "", "get_device_info_by_index"], [15, 2, 1, "", "open"], [15, 2, 1, "", "process_buffer"], [15, 5, 1, "", "range"], [15, 2, 1, "", "terminate"]], "pya.PyAudioBackend": [[15, 5, 1, "", "_boot_delay"], [15, 5, 1, "", "bs"], [15, 2, 1, "", "get_default_input_device_info"], [15, 2, 1, "", "get_default_output_device_info"], [15, 2, 1, "", "get_device_count"], [15, 2, 1, "", "get_device_info_by_index"], [15, 2, 1, "", "open"], [15, 2, 1, "", "process_buffer"], [15, 2, 1, "", "terminate"]], "pya.Ugen": [[5, 1, 1, "", "Ugen"], [15, 2, 1, "", "cos"], [5, 6, 1, "", "get_num_of_rows"], [15, 2, 1, "", "noise"], [15, 2, 1, "", "sawtooth"], [15, 2, 1, "", "sine"], [15, 2, 1, "", "square"]], "pya.Ugen.Ugen": [[5, 2, 1, "", "cos"], [5, 2, 1, "", "noise"], [5, 2, 1, "", "sawtooth"], [5, 2, 1, "", "sine"], [5, 2, 1, "", "square"]], "pya.backend": [[6, 0, 0, "-", "Dummy"], [10, 1, 1, "", "DummyBackend"], [7, 0, 0, "-", "Jupyter"], [8, 0, 0, "-", "PyAudio"], [10, 1, 1, "", "PyAudioBackend"], [9, 0, 0, "-", "base"], [10, 6, 1, "", "determine_backend"]], "pya.backend.Dummy": [[6, 1, 1, "", "DummyBackend"], [6, 1, 1, "", "DummyStream"]], "pya.backend.Dummy.DummyBackend": [[6, 5, 1, "", "bs"], [6, 5, 1, "", "dtype"], [6, 2, 1, "", "get_default_input_device_info"], [6, 2, 1, "", "get_default_output_device_info"], [6, 2, 1, "", "get_device_count"], [6, 2, 1, "", "get_device_info_by_index"], [6, 2, 1, "", "open"], [6, 2, 1, "", "process_buffer"], [6, 5, 1, "", "range"], [6, 2, 1, "", "terminate"]], "pya.backend.Dummy.DummyStream": [[6, 2, 1, "", "_generate_data"], [6, 2, 1, "", "_process_data"], [6, 2, 1, "", "close"], [6, 2, 1, "", "is_active"], [6, 2, 1, "", "start_stream"], [6, 2, 1, "", "stop_stream"]], "pya.backend.DummyBackend": [[10, 5, 1, "", "bs"], [10, 5, 1, "", "dtype"], [10, 2, 1, "", "get_default_input_device_info"], [10, 2, 1, "", "get_default_output_device_info"], [10, 2, 1, "", "get_device_count"], [10, 2, 1, "", "get_device_info_by_index"], [10, 2, 1, "", "open"], [10, 2, 1, "", "process_buffer"], [10, 5, 1, "", "range"], [10, 2, 1, "", "terminate"]], "pya.backend.Jupyter": [[7, 1, 1, "", "JupyterBackend"], [7, 1, 1, "", "JupyterStream"]], "pya.backend.Jupyter.JupyterBackend": [[7, 5, 1, "", "bs"], [7, 5, 1, "", "dtype"], [7, 2, 1, "", "get_default_input_device_info"], [7, 2, 1, "", "get_default_output_device_info"], [7, 2, 1, "", "get_device_count"], [7, 2, 1, "", "get_device_info_by_index"], [7, 2, 1, "", "open"], [7, 2, 1, "", "process_buffer"], [7, 5, 1, "", "range"], [7, 2, 1, "", "terminate"]], "pya.backend.Jupyter.JupyterStream": [[7, 2, 1, "", "close"], [7, 2, 1, "", "is_active"], [7, 2, 1, "", "set_buffer_threshold"], [7, 2, 1, "", "start_stream"], [7, 2, 1, "", "stop_stream"]], "pya.backend.PyAudio": [[8, 1, 1, "", "PyAudioBackend"]], "pya.backend.PyAudio.PyAudioBackend": [[8, 5, 1, "", "_boot_delay"], [8, 5, 1, "", "bs"], [8, 2, 1, "", "get_default_input_device_info"], [8, 2, 1, "", "get_default_output_device_info"], [8, 2, 1, "", "get_device_count"], [8, 2, 1, "", "get_device_info_by_index"], [8, 2, 1, "", "open"], [8, 2, 1, "", "process_buffer"], [8, 2, 1, "", "terminate"]], "pya.backend.PyAudioBackend": [[10, 5, 1, "", "_boot_delay"], [10, 5, 1, "", "bs"], [10, 2, 1, "", "get_default_input_device_info"], [10, 2, 1, "", "get_default_output_device_info"], [10, 2, 1, "", "get_device_count"], [10, 2, 1, "", "get_device_info_by_index"], [10, 2, 1, "", "open"], [10, 2, 1, "", "process_buffer"], [10, 2, 1, "", "terminate"]], "pya.backend.base": [[9, 1, 1, "", "BackendBase"], [9, 1, 1, "", "StreamBase"]], "pya.backend.base.BackendBase": [[9, 2, 1, "", "get_default_input_device_info"], [9, 2, 1, "", "get_default_output_device_info"], [9, 2, 1, "", "get_device_count"], [9, 2, 1, "", "get_device_info_by_index"], [9, 2, 1, "", "open"], [9, 2, 1, "", "process_buffer"], [9, 2, 1, "", "terminate"]], "pya.backend.base.StreamBase": [[9, 2, 1, "", "close"], [9, 2, 1, "", "is_active"], [9, 2, 1, "", "start_stream"], [9, 2, 1, "", "stop_stream"]], "pya.helper": [[14, 6, 1, "", "ampdb"], [14, 6, 1, "", "audio_from_file"], [11, 0, 0, "-", "backend"], [14, 6, 1, "", "buf_to_float"], [14, 6, 1, "", "clip"], [12, 0, 0, "-", "codec"], [14, 6, 1, "", "cpsmidi"], [14, 6, 1, "", "dbamp"], [14, 6, 1, "", "device_info"], [14, 6, 1, "", "find_device"], [13, 0, 0, "-", "helpers"], [14, 6, 1, "", "linlin"], [14, 6, 1, "", "midicps"], [14, 6, 1, "", "normalize"], [14, 6, 1, "", "spectrum"]], "pya.helper.backend": [[11, 6, 1, "", "determine_backend"], [11, 6, 1, "", "get_server_info"]], "pya.helper.codec": [[12, 7, 1, "", "BitWidthError"], [12, 4, 1, "", "COMMANDS"], [12, 7, 1, "", "CommunicationError"], [12, 7, 1, "", "DecodeError"], [12, 1, 1, "", "FFmpegAudioFile"], [12, 7, 1, "", "FFmpegError"], [12, 7, 1, "", "NoBackendError"], [12, 7, 1, "", "NotInstalledError"], [12, 4, 1, "", "PROC_FLAGS"], [12, 1, 1, "", "QueueReaderThread"], [12, 1, 1, "", "RawAudioFile"], [12, 7, 1, "", "ReadTimeoutError"], [12, 4, 1, "", "SUPPORTED_WIDTHS"], [12, 4, 1, "", "TARGET_WIDTH"], [12, 7, 1, "", "UnsupportedError"], [12, 6, 1, "", "audio_read"], [12, 6, 1, "", "available_backends"], [12, 6, 1, "", "byteswap"], [12, 6, 1, "", "ffmpeg_available"], [12, 6, 1, "", "popen_multiple"], [12, 4, 1, "", "windows_error_mode_lock"]], "pya.helper.codec.FFmpegAudioFile": [[12, 2, 1, "", "__del__"], [12, 2, 1, "", "__enter__"], [12, 2, 1, "", "__exit__"], [12, 2, 1, "", "__iter__"], [12, 2, 1, "", "_get_info"], [12, 2, 1, "", "_parse_info"], [12, 2, 1, "", "close"], [12, 2, 1, "", "read_data"]], "pya.helper.codec.QueueReaderThread": [[12, 2, 1, "", "run"]], "pya.helper.codec.RawAudioFile": [[12, 2, 1, "", "__enter__"], [12, 2, 1, "", "__exit__"], [12, 2, 1, "", "__iter__"], [12, 2, 1, "", "_check"], [12, 3, 1, "", "channels"], [12, 2, 1, "", "close"], [12, 3, 1, "", "duration"], [12, 2, 1, "", "read_data"], [12, 3, 1, "", "samplerate"]], "pya.helper.helpers": [[13, 7, 1, "", "_error"], [13, 6, 1, "", "ampdb"], [13, 6, 1, "", "audio_from_file"], [13, 6, 1, "", "buf_to_float"], [13, 6, 1, "", "clip"], [13, 6, 1, "", "cpsmidi"], [13, 6, 1, "", "dbamp"], [13, 6, 1, "", "device_info"], [13, 6, 1, "", "find_device"], [13, 6, 1, "", "linlin"], [13, 6, 1, "", "midicps"], [13, 6, 1, "", "normalize"], [13, 6, 1, "", "spectrum"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:data", "5": "py:attribute", "6": "py:function", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "data", "Python data"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"pya": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21], "arecord": [0, 19], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 21], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15], "attribut": [0, 1, 2, 3, 4, 12], "exampl": [0, 1, 15, 16, 17], "aserv": [1, 19], "asig": [2, 16, 17, 19], "aspec": [3, 19], "astft": [4, 19], "ugen": [5, 19], "function": [5, 10, 11, 12, 13, 14, 15], "backend": [6, 7, 8, 9, 10, 11, 20], "dummi": [6, 20], "jupyt": 7, "pyaudio": [8, 20], "base": [9, 20], "submodul": [10, 14, 15, 19, 20, 21], "packag": [10, 14, 15, 19, 20, 21], "helper": [11, 12, 13, 14, 21], "codec": [12, 21], "subpackag": [15, 19], "what": [16, 17], "i": [16, 17], "author": [16, 17], "contributor": [16, 17], "instal": [16, 17], "A": [16, 17], "simpl": [16, 17], "startup": [16, 17], "creat": [16, 17], "an": [16, 17], "signal": [16, 17], "plai": [16, 17], "plot": [16, 17], "select": [16, 17], "subset": [16, 17], "method": [16, 17], "chain": [16, 17], "learn": [16, 17], "more": [16, 17], "contribut": [16, 17], "indic": 17, "tabl": 17, "version": 19}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"pya.Arecorder": [[0, "module-pya.Arecorder"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"]], "Classes": [[0, "classes"], [1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [12, "classes"], [15, "classes"]], "Attributes": [[0, "attributes"], [1, "attributes"], [2, "attributes"], [3, "attributes"], [4, "attributes"], [12, "attributes"]], "Examples:": [[0, "examples"], [1, "examples"], [15, "examples"], [15, "id2"]], "pya.Aserver": [[1, "module-pya.Aserver"]], "pya.Asig": [[2, "module-pya.Asig"]], "pya.Aspec": [[3, "module-pya.Aspec"]], "pya.Astft": [[4, "module-pya.Astft"]], "pya.Ugen": [[5, "module-pya.Ugen"]], "Functions": [[5, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"]], "pya.backend.Dummy": [[6, "module-pya.backend.Dummy"]], "pya.backend.Jupyter": [[7, "module-pya.backend.Jupyter"]], "pya.backend.PyAudio": [[8, "module-pya.backend.PyAudio"]], "pya.backend.base": [[9, "module-pya.backend.base"]], "pya.backend": [[10, "module-pya.backend"]], "Submodules": [[10, "submodules"], [14, "submodules"], [15, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"]], "Package Contents": [[10, "package-contents"], [14, "package-contents"], [15, "package-contents"]], "pya.helper.backend": [[11, "module-pya.helper.backend"]], "pya.helper.codec": [[12, "module-pya.helper.codec"]], "pya.helper.helpers": [[13, "module-pya.helper.helpers"]], "pya.helper": [[14, "module-pya.helper"]], "pya": [[15, "module-pya"], [16, "pya"], [17, "pya"]], "Subpackages": [[15, "subpackages"], [19, "subpackages"]], "What is pya?": [[16, "what-is-pya"], [17, "what-is-pya"]], "Authors and Contributors": [[16, "authors-and-contributors"], [17, "authors-and-contributors"]], "Installation": [[16, "installation"], [17, "installation"]], "A simple example": [[16, "a-simple-example"], [17, "a-simple-example"]], "Startup:": [[16, "startup"], [17, "startup"]], "Create an Asig signal:": [[16, "create-an-asig-signal"], [17, "create-an-asig-signal"]], "Play signals": [[16, "play-signals"], [17, "play-signals"]], "Plotting signals": [[16, "plotting-signals"], [17, "plotting-signals"]], "Selection of subsets": [[16, "selection-of-subsets"], [17, "selection-of-subsets"]], "Method chaining": [[16, "method-chaining"], [17, "method-chaining"]], "Learning more": [[16, "learning-more"], [17, "learning-more"]], "Contributing": [[16, "contributing"], [17, "contributing"]], "Indices and tables": [[17, "indices-and-tables"]], "modules": [[18, "modules"]], "pya package": [[19, "pya-package"]], "pya.Arecorder module": [[19, "pya-arecorder-module"]], "pya.Aserver module": [[19, "pya-aserver-module"]], "pya.Asig module": [[19, "pya-asig-module"]], "pya.Aspec module": [[19, "pya-aspec-module"]], "pya.Astft module": [[19, "pya-astft-module"]], "pya.Ugen module": [[19, "pya-ugen-module"]], "pya.version module": [[19, "pya-version-module"]], "Module contents": [[19, "module-contents"], [20, "module-contents"], [21, "module-contents"]], "pya.backend package": [[20, "pya-backend-package"]], "pya.backend.Dummy module": [[20, "pya-backend-dummy-module"]], "pya.backend.PyAudio module": [[20, "pya-backend-pyaudio-module"]], "pya.backend.base module": [[20, "pya-backend-base-module"]], "pya.helper package": [[21, "pya-helper-package"]], "pya.helper.codec module": [[21, "pya-helper-codec-module"]], "pya.helper.helpers module": [[21, "pya-helper-helpers-module"]]}, "indexentries": {"arecorder (class in pya.arecorder)": [[0, "pya.Arecorder.Arecorder"]], "_logger (in module pya.arecorder)": [[0, "pya.Arecorder._LOGGER"]], "__repr__() (pya.arecorder.arecorder method)": [[0, "pya.Arecorder.Arecorder.__repr__"]], "_recorder_callback() (pya.arecorder.arecorder method)": [[0, "pya.Arecorder.Arecorder._recorder_callback"]], "boot() (pya.arecorder.arecorder method)": [[0, "pya.Arecorder.Arecorder.boot"]], "device (pya.arecorder.arecorder property)": [[0, "pya.Arecorder.Arecorder.device"]], "module": [[0, "module-pya.Arecorder"], [1, "module-pya.Aserver"], [2, "module-pya.Asig"], [3, "module-pya.Aspec"], [4, "module-pya.Astft"], [5, "module-pya.Ugen"], [6, "module-pya.backend.Dummy"], [7, "module-pya.backend.Jupyter"], [8, "module-pya.backend.PyAudio"], [9, "module-pya.backend.base"], [10, "module-pya.backend"], [11, "module-pya.helper.backend"], [12, "module-pya.helper.codec"], [13, "module-pya.helper.helpers"], [14, "module-pya.helper"], [15, "module-pya"]], "pause() (pya.arecorder.arecorder method)": [[0, "pya.Arecorder.Arecorder.pause"]], "pya.arecorder": [[0, "module-pya.Arecorder"]], "record() (pya.arecorder.arecorder method)": [[0, "pya.Arecorder.Arecorder.record"]], "reset() (pya.arecorder.arecorder method)": [[0, "pya.Arecorder.Arecorder.reset"]], "set_tracks() (pya.arecorder.arecorder method)": [[0, "pya.Arecorder.Arecorder.set_tracks"]], "stop() (pya.arecorder.arecorder method)": [[0, "pya.Arecorder.Arecorder.stop"]], "aserver (class in pya.aserver)": [[1, "pya.Aserver.Aserver"]], "_logger (in module pya.aserver)": [[1, "pya.Aserver._LOGGER"]], "__del__() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver.__del__"]], "__repr__() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver.__repr__"]], "_play_callback() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver._play_callback"]], "boot() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver.boot"]], "default (pya.aserver.aserver attribute)": [[1, "pya.Aserver.Aserver.default"]], "device (pya.aserver.aserver property)": [[1, "pya.Aserver.Aserver.device"]], "get_devices() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver.get_devices"]], "play() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver.play"]], "pya.aserver": [[1, "module-pya.Aserver"]], "quit() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver.quit"]], "set_device() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver.set_device"]], "shutdown_default_server() (pya.aserver.aserver static method)": [[1, "pya.Aserver.Aserver.shutdown_default_server"]], "startup_default_server() (pya.aserver.aserver static method)": [[1, "pya.Aserver.Aserver.startup_default_server"]], "stop() (pya.aserver.aserver method)": [[1, "pya.Aserver.Aserver.stop"]], "asig (class in pya.asig)": [[2, "pya.Asig.Asig"]], "_logger (in module pya.asig)": [[2, "pya.Asig._LOGGER"]], "__add__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__add__"]], "__eq__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__eq__"]], "__getitem__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__getitem__"]], "__mul__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__mul__"]], "__radd__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__radd__"]], "__repr__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__repr__"]], "__rmul__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__rmul__"]], "__rsub__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__rsub__"]], "__rtruediv__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__rtruediv__"]], "__setitem__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__setitem__"]], "__sub__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__sub__"]], "__truediv__() (pya.asig.asig method)": [[2, "pya.Asig.Asig.__truediv__"]], "_load_audio_file() (pya.asig.asig method)": [[2, "pya.Asig.Asig._load_audio_file"]], "_set_col_names() (pya.asig.asig method)": [[2, "pya.Asig.Asig._set_col_names"]], "add() (pya.asig.asig method)": [[2, "pya.Asig.Asig.add"]], "adsr() (pya.asig.asig method)": [[2, "pya.Asig.Asig.adsr"]], "append() (pya.asig.asig method)": [[2, "pya.Asig.Asig.append"]], "b (pya.asig.asig property)": [[2, "pya.Asig.Asig.b"]], "bound (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.bound"]], "channels (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.channels"]], "channels (pya.asig.asig property)": [[2, "id0"]], "cn (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.cn"]], "cn (pya.asig.asig property)": [[2, "id1"]], "custom() (pya.asig.asig method)": [[2, "pya.Asig.Asig.custom"]], "envelope() (pya.asig.asig method)": [[2, "pya.Asig.Asig.envelope"]], "extend (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.extend"]], "fade_in() (pya.asig.asig method)": [[2, "pya.Asig.Asig.fade_in"]], "fade_out() (pya.asig.asig method)": [[2, "pya.Asig.Asig.fade_out"]], "find_events() (pya.asig.asig method)": [[2, "pya.Asig.Asig.find_events"]], "gain() (pya.asig.asig method)": [[2, "pya.Asig.Asig.gain"]], "get_duration() (pya.asig.asig method)": [[2, "pya.Asig.Asig.get_duration"]], "get_size() (pya.asig.asig method)": [[2, "pya.Asig.Asig.get_size"]], "get_times() (pya.asig.asig method)": [[2, "pya.Asig.Asig.get_times"]], "iirfilter() (pya.asig.asig method)": [[2, "pya.Asig.Asig.iirfilter"]], "label (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.label"]], "mix_mode (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.mix_mode"]], "mono() (pya.asig.asig method)": [[2, "pya.Asig.Asig.mono"]], "norm() (pya.asig.asig method)": [[2, "pya.Asig.Asig.norm"]], "o (pya.asig.asig property)": [[2, "pya.Asig.Asig.o"]], "overlap_add() (pya.asig.asig method)": [[2, "pya.Asig.Asig.overlap_add"]], "overwrite (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.overwrite"]], "pan2() (pya.asig.asig method)": [[2, "pya.Asig.Asig.pan2"]], "play() (pya.asig.asig method)": [[2, "pya.Asig.Asig.play"]], "plot() (pya.asig.asig method)": [[2, "pya.Asig.Asig.plot"]], "plot_events() (pya.asig.asig method)": [[2, "pya.Asig.Asig.plot_events"]], "plot_freqz() (pya.asig.asig method)": [[2, "pya.Asig.Asig.plot_freqz"]], "plot_spectrum() (pya.asig.asig method)": [[2, "pya.Asig.Asig.plot_spectrum"]], "pya.asig": [[2, "module-pya.Asig"]], "remove_dc() (pya.asig.asig method)": [[2, "pya.Asig.Asig.remove_DC"]], "resample() (pya.asig.asig method)": [[2, "pya.Asig.Asig.resample"]], "rewire() (pya.asig.asig method)": [[2, "pya.Asig.Asig.rewire"]], "rms() (pya.asig.asig method)": [[2, "pya.Asig.Asig.rms"]], "samples (pya.asig.asig property)": [[2, "pya.Asig.Asig.samples"]], "save_wavfile() (pya.asig.asig method)": [[2, "pya.Asig.Asig.save_wavfile"]], "select_event() (pya.asig.asig method)": [[2, "pya.Asig.Asig.select_event"]], "shift_channel() (pya.asig.asig method)": [[2, "pya.Asig.Asig.shift_channel"]], "sig (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.sig"]], "spectrogram() (pya.asig.asig method)": [[2, "pya.Asig.Asig.spectrogram"]], "sr (pya.asig.asig attribute)": [[2, "pya.Asig.Asig.sr"]], "stereo() (pya.asig.asig method)": [[2, "pya.Asig.Asig.stereo"]], "to_spec() (pya.asig.asig method)": [[2, "pya.Asig.Asig.to_spec"]], "to_stft() (pya.asig.asig method)": [[2, "pya.Asig.Asig.to_stft"]], "window() (pya.asig.asig method)": [[2, "pya.Asig.Asig.window"]], "window_op() (pya.asig.asig method)": [[2, "pya.Asig.Asig.window_op"]], "x (pya.asig.asig property)": [[2, "pya.Asig.Asig.x"]], "aspec (class in pya.aspec)": [[3, "pya.Aspec.Aspec"]], "_logger (in module pya.aspec)": [[3, "pya.Aspec._LOGGER"]], "__repr__() (pya.aspec.aspec method)": [[3, "pya.Aspec.Aspec.__repr__"]], "plot() (pya.aspec.aspec method)": [[3, "pya.Aspec.Aspec.plot"]], "pya.aspec": [[3, "module-pya.Aspec"]], "to_sig() (pya.aspec.aspec method)": [[3, "pya.Aspec.Aspec.to_sig"]], "weight() (pya.aspec.aspec method)": [[3, "pya.Aspec.Aspec.weight"]], "astft (class in pya.astft)": [[4, "pya.Astft.Astft"]], "_logger (in module pya.astft)": [[4, "pya.Astft._LOGGER"]], "__repr__() (pya.astft.astft method)": [[4, "pya.Astft.Astft.__repr__"]], "plot() (pya.astft.astft method)": [[4, "pya.Astft.Astft.plot"]], "pya.astft": [[4, "module-pya.Astft"]], "to_sig() (pya.astft.astft method)": [[4, "pya.Astft.Astft.to_sig"]], "ugen (class in pya.ugen)": [[5, "pya.Ugen.Ugen"]], "cos() (pya.ugen.ugen method)": [[5, "pya.Ugen.Ugen.cos"]], "get_num_of_rows() (in module pya.ugen)": [[5, "pya.Ugen.get_num_of_rows"]], "noise() (pya.ugen.ugen method)": [[5, "pya.Ugen.Ugen.noise"]], "pya.ugen": [[5, "module-pya.Ugen"]], "sawtooth() (pya.ugen.ugen method)": [[5, "pya.Ugen.Ugen.sawtooth"]], "sine() (pya.ugen.ugen method)": [[5, "pya.Ugen.Ugen.sine"]], "square() (pya.ugen.ugen method)": [[5, "pya.Ugen.Ugen.square"]], "dummybackend (class in pya.backend.dummy)": [[6, "pya.backend.Dummy.DummyBackend"]], "dummystream (class in pya.backend.dummy)": [[6, "pya.backend.Dummy.DummyStream"]], "_generate_data() (pya.backend.dummy.dummystream method)": [[6, "pya.backend.Dummy.DummyStream._generate_data"]], "_process_data() (pya.backend.dummy.dummystream method)": [[6, "pya.backend.Dummy.DummyStream._process_data"]], "bs (pya.backend.dummy.dummybackend attribute)": [[6, "pya.backend.Dummy.DummyBackend.bs"]], "close() (pya.backend.dummy.dummystream method)": [[6, "pya.backend.Dummy.DummyStream.close"]], "dtype (pya.backend.dummy.dummybackend attribute)": [[6, "pya.backend.Dummy.DummyBackend.dtype"]], "get_default_input_device_info() (pya.backend.dummy.dummybackend method)": [[6, "pya.backend.Dummy.DummyBackend.get_default_input_device_info"]], "get_default_output_device_info() (pya.backend.dummy.dummybackend method)": [[6, "pya.backend.Dummy.DummyBackend.get_default_output_device_info"]], "get_device_count() (pya.backend.dummy.dummybackend method)": [[6, "pya.backend.Dummy.DummyBackend.get_device_count"]], "get_device_info_by_index() (pya.backend.dummy.dummybackend method)": [[6, "pya.backend.Dummy.DummyBackend.get_device_info_by_index"]], "is_active() (pya.backend.dummy.dummystream method)": [[6, "pya.backend.Dummy.DummyStream.is_active"]], "open() (pya.backend.dummy.dummybackend method)": [[6, "pya.backend.Dummy.DummyBackend.open"]], "process_buffer() (pya.backend.dummy.dummybackend method)": [[6, "pya.backend.Dummy.DummyBackend.process_buffer"]], "pya.backend.dummy": [[6, "module-pya.backend.Dummy"]], "range (pya.backend.dummy.dummybackend attribute)": [[6, "pya.backend.Dummy.DummyBackend.range"]], "start_stream() (pya.backend.dummy.dummystream method)": [[6, "pya.backend.Dummy.DummyStream.start_stream"]], "stop_stream() (pya.backend.dummy.dummystream method)": [[6, "pya.backend.Dummy.DummyStream.stop_stream"]], "terminate() (pya.backend.dummy.dummybackend method)": [[6, "pya.backend.Dummy.DummyBackend.terminate"]], "jupyterbackend (class in pya.backend.jupyter)": [[7, "pya.backend.Jupyter.JupyterBackend"]], "jupyterstream (class in pya.backend.jupyter)": [[7, "pya.backend.Jupyter.JupyterStream"]], "bs (pya.backend.jupyter.jupyterbackend attribute)": [[7, "pya.backend.Jupyter.JupyterBackend.bs"]], "close() (pya.backend.jupyter.jupyterstream method)": [[7, "pya.backend.Jupyter.JupyterStream.close"]], "dtype (pya.backend.jupyter.jupyterbackend attribute)": [[7, "pya.backend.Jupyter.JupyterBackend.dtype"]], "get_default_input_device_info() (pya.backend.jupyter.jupyterbackend method)": [[7, "pya.backend.Jupyter.JupyterBackend.get_default_input_device_info"]], "get_default_output_device_info() (pya.backend.jupyter.jupyterbackend method)": [[7, "pya.backend.Jupyter.JupyterBackend.get_default_output_device_info"]], "get_device_count() (pya.backend.jupyter.jupyterbackend method)": [[7, "pya.backend.Jupyter.JupyterBackend.get_device_count"]], "get_device_info_by_index() (pya.backend.jupyter.jupyterbackend method)": [[7, "pya.backend.Jupyter.JupyterBackend.get_device_info_by_index"]], "is_active() (pya.backend.jupyter.jupyterstream method)": [[7, "pya.backend.Jupyter.JupyterStream.is_active"]], "open() (pya.backend.jupyter.jupyterbackend method)": [[7, "pya.backend.Jupyter.JupyterBackend.open"]], "process_buffer() (pya.backend.jupyter.jupyterbackend method)": [[7, "pya.backend.Jupyter.JupyterBackend.process_buffer"]], "pya.backend.jupyter": [[7, "module-pya.backend.Jupyter"]], "range (pya.backend.jupyter.jupyterbackend attribute)": [[7, "pya.backend.Jupyter.JupyterBackend.range"]], "set_buffer_threshold() (pya.backend.jupyter.jupyterstream static method)": [[7, "pya.backend.Jupyter.JupyterStream.set_buffer_threshold"]], "start_stream() (pya.backend.jupyter.jupyterstream method)": [[7, "pya.backend.Jupyter.JupyterStream.start_stream"]], "stop_stream() (pya.backend.jupyter.jupyterstream method)": [[7, "pya.backend.Jupyter.JupyterStream.stop_stream"]], "terminate() (pya.backend.jupyter.jupyterbackend method)": [[7, "pya.backend.Jupyter.JupyterBackend.terminate"]], "pyaudiobackend (class in pya.backend.pyaudio)": [[8, "pya.backend.PyAudio.PyAudioBackend"]], "_boot_delay (pya.backend.pyaudio.pyaudiobackend attribute)": [[8, "pya.backend.PyAudio.PyAudioBackend._boot_delay"]], "bs (pya.backend.pyaudio.pyaudiobackend attribute)": [[8, "pya.backend.PyAudio.PyAudioBackend.bs"]], "get_default_input_device_info() (pya.backend.pyaudio.pyaudiobackend method)": [[8, "pya.backend.PyAudio.PyAudioBackend.get_default_input_device_info"]], "get_default_output_device_info() (pya.backend.pyaudio.pyaudiobackend method)": [[8, "pya.backend.PyAudio.PyAudioBackend.get_default_output_device_info"]], "get_device_count() (pya.backend.pyaudio.pyaudiobackend method)": [[8, "pya.backend.PyAudio.PyAudioBackend.get_device_count"]], "get_device_info_by_index() (pya.backend.pyaudio.pyaudiobackend method)": [[8, "pya.backend.PyAudio.PyAudioBackend.get_device_info_by_index"]], "open() (pya.backend.pyaudio.pyaudiobackend method)": [[8, "pya.backend.PyAudio.PyAudioBackend.open"]], "process_buffer() (pya.backend.pyaudio.pyaudiobackend method)": [[8, "pya.backend.PyAudio.PyAudioBackend.process_buffer"]], "pya.backend.pyaudio": [[8, "module-pya.backend.PyAudio"]], "terminate() (pya.backend.pyaudio.pyaudiobackend method)": [[8, "pya.backend.PyAudio.PyAudioBackend.terminate"]], "backendbase (class in pya.backend.base)": [[9, "pya.backend.base.BackendBase"]], "streambase (class in pya.backend.base)": [[9, "pya.backend.base.StreamBase"]], "close() (pya.backend.base.streambase method)": [[9, "pya.backend.base.StreamBase.close"]], "get_default_input_device_info() (pya.backend.base.backendbase method)": [[9, "pya.backend.base.BackendBase.get_default_input_device_info"]], "get_default_output_device_info() (pya.backend.base.backendbase method)": [[9, "pya.backend.base.BackendBase.get_default_output_device_info"]], "get_device_count() (pya.backend.base.backendbase method)": [[9, "pya.backend.base.BackendBase.get_device_count"]], "get_device_info_by_index() (pya.backend.base.backendbase method)": [[9, "pya.backend.base.BackendBase.get_device_info_by_index"]], "is_active() (pya.backend.base.streambase method)": [[9, "pya.backend.base.StreamBase.is_active"]], "open() (pya.backend.base.backendbase method)": [[9, "pya.backend.base.BackendBase.open"]], "process_buffer() (pya.backend.base.backendbase method)": [[9, "pya.backend.base.BackendBase.process_buffer"]], "pya.backend.base": [[9, "module-pya.backend.base"]], "start_stream() (pya.backend.base.streambase method)": [[9, "pya.backend.base.StreamBase.start_stream"]], "stop_stream() (pya.backend.base.streambase method)": [[9, "pya.backend.base.StreamBase.stop_stream"]], "terminate() (pya.backend.base.backendbase method)": [[9, "pya.backend.base.BackendBase.terminate"]], "dummybackend (class in pya.backend)": [[10, "pya.backend.DummyBackend"]], "pyaudiobackend (class in pya.backend)": [[10, "pya.backend.PyAudioBackend"]], "_boot_delay (pya.backend.pyaudiobackend attribute)": [[10, "pya.backend.PyAudioBackend._boot_delay"]], "bs (pya.backend.dummybackend attribute)": [[10, "pya.backend.DummyBackend.bs"]], "bs (pya.backend.pyaudiobackend attribute)": [[10, "pya.backend.PyAudioBackend.bs"]], "determine_backend() (in module pya.backend)": [[10, "pya.backend.determine_backend"]], "dtype (pya.backend.dummybackend attribute)": [[10, "pya.backend.DummyBackend.dtype"]], "get_default_input_device_info() (pya.backend.dummybackend method)": [[10, "pya.backend.DummyBackend.get_default_input_device_info"]], "get_default_input_device_info() (pya.backend.pyaudiobackend method)": [[10, "pya.backend.PyAudioBackend.get_default_input_device_info"]], "get_default_output_device_info() (pya.backend.dummybackend method)": [[10, "pya.backend.DummyBackend.get_default_output_device_info"]], "get_default_output_device_info() (pya.backend.pyaudiobackend method)": [[10, "pya.backend.PyAudioBackend.get_default_output_device_info"]], "get_device_count() (pya.backend.dummybackend method)": [[10, "pya.backend.DummyBackend.get_device_count"]], "get_device_count() (pya.backend.pyaudiobackend method)": [[10, "pya.backend.PyAudioBackend.get_device_count"]], "get_device_info_by_index() (pya.backend.dummybackend method)": [[10, "pya.backend.DummyBackend.get_device_info_by_index"]], "get_device_info_by_index() (pya.backend.pyaudiobackend method)": [[10, "pya.backend.PyAudioBackend.get_device_info_by_index"]], "open() (pya.backend.dummybackend method)": [[10, "pya.backend.DummyBackend.open"]], "open() (pya.backend.pyaudiobackend method)": [[10, "pya.backend.PyAudioBackend.open"]], "process_buffer() (pya.backend.dummybackend method)": [[10, "pya.backend.DummyBackend.process_buffer"]], "process_buffer() (pya.backend.pyaudiobackend method)": [[10, "pya.backend.PyAudioBackend.process_buffer"]], "pya.backend": [[10, "module-pya.backend"]], "range (pya.backend.dummybackend attribute)": [[10, "pya.backend.DummyBackend.range"]], "terminate() (pya.backend.dummybackend method)": [[10, "pya.backend.DummyBackend.terminate"]], "terminate() (pya.backend.pyaudiobackend method)": [[10, "pya.backend.PyAudioBackend.terminate"]], "determine_backend() (in module pya.helper.backend)": [[11, "pya.helper.backend.determine_backend"]], "get_server_info() (in module pya.helper.backend)": [[11, "pya.helper.backend.get_server_info"]], "pya.helper.backend": [[11, "module-pya.helper.backend"]], "bitwidtherror": [[12, "pya.helper.codec.BitWidthError"]], "commands (in module pya.helper.codec)": [[12, "pya.helper.codec.COMMANDS"]], "communicationerror": [[12, "pya.helper.codec.CommunicationError"]], "decodeerror": [[12, "pya.helper.codec.DecodeError"]], "ffmpegaudiofile (class in pya.helper.codec)": [[12, "pya.helper.codec.FFmpegAudioFile"]], "ffmpegerror": [[12, "pya.helper.codec.FFmpegError"]], "nobackenderror": [[12, "pya.helper.codec.NoBackendError"]], "notinstallederror": [[12, "pya.helper.codec.NotInstalledError"]], "proc_flags (in module pya.helper.codec)": [[12, "pya.helper.codec.PROC_FLAGS"]], "queuereaderthread (class in pya.helper.codec)": [[12, "pya.helper.codec.QueueReaderThread"]], "rawaudiofile (class in pya.helper.codec)": [[12, "pya.helper.codec.RawAudioFile"]], "readtimeouterror": [[12, "pya.helper.codec.ReadTimeoutError"]], "supported_widths (in module pya.helper.codec)": [[12, "pya.helper.codec.SUPPORTED_WIDTHS"]], "target_width (in module pya.helper.codec)": [[12, "pya.helper.codec.TARGET_WIDTH"]], "unsupportederror": [[12, "pya.helper.codec.UnsupportedError"]], "__del__() (pya.helper.codec.ffmpegaudiofile method)": [[12, "pya.helper.codec.FFmpegAudioFile.__del__"]], "__enter__() (pya.helper.codec.ffmpegaudiofile method)": [[12, "pya.helper.codec.FFmpegAudioFile.__enter__"]], "__enter__() (pya.helper.codec.rawaudiofile method)": [[12, "pya.helper.codec.RawAudioFile.__enter__"]], "__exit__() (pya.helper.codec.ffmpegaudiofile method)": [[12, "pya.helper.codec.FFmpegAudioFile.__exit__"]], "__exit__() (pya.helper.codec.rawaudiofile method)": [[12, "pya.helper.codec.RawAudioFile.__exit__"]], "__iter__() (pya.helper.codec.ffmpegaudiofile method)": [[12, "pya.helper.codec.FFmpegAudioFile.__iter__"]], "__iter__() (pya.helper.codec.rawaudiofile method)": [[12, "pya.helper.codec.RawAudioFile.__iter__"]], "_check() (pya.helper.codec.rawaudiofile method)": [[12, "pya.helper.codec.RawAudioFile._check"]], "_get_info() (pya.helper.codec.ffmpegaudiofile method)": [[12, "pya.helper.codec.FFmpegAudioFile._get_info"]], "_parse_info() (pya.helper.codec.ffmpegaudiofile method)": [[12, "pya.helper.codec.FFmpegAudioFile._parse_info"]], "audio_read() (in module pya.helper.codec)": [[12, "pya.helper.codec.audio_read"]], "available_backends() (in module pya.helper.codec)": [[12, "pya.helper.codec.available_backends"]], "byteswap() (in module pya.helper.codec)": [[12, "pya.helper.codec.byteswap"]], "channels (pya.helper.codec.rawaudiofile property)": [[12, "pya.helper.codec.RawAudioFile.channels"]], "close() (pya.helper.codec.ffmpegaudiofile method)": [[12, "pya.helper.codec.FFmpegAudioFile.close"]], "close() (pya.helper.codec.rawaudiofile method)": [[12, "pya.helper.codec.RawAudioFile.close"]], "duration (pya.helper.codec.rawaudiofile property)": [[12, "pya.helper.codec.RawAudioFile.duration"]], "ffmpeg_available() (in module pya.helper.codec)": [[12, "pya.helper.codec.ffmpeg_available"]], "popen_multiple() (in module pya.helper.codec)": [[12, "pya.helper.codec.popen_multiple"]], "pya.helper.codec": [[12, "module-pya.helper.codec"]], "read_data() (pya.helper.codec.ffmpegaudiofile method)": [[12, "pya.helper.codec.FFmpegAudioFile.read_data"]], "read_data() (pya.helper.codec.rawaudiofile method)": [[12, "pya.helper.codec.RawAudioFile.read_data"]], "run() (pya.helper.codec.queuereaderthread method)": [[12, "pya.helper.codec.QueueReaderThread.run"]], "samplerate (pya.helper.codec.rawaudiofile property)": [[12, "pya.helper.codec.RawAudioFile.samplerate"]], "windows_error_mode_lock (in module pya.helper.codec)": [[12, "pya.helper.codec.windows_error_mode_lock"]], "_error": [[13, "pya.helper.helpers._error"]], "ampdb() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.ampdb"]], "audio_from_file() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.audio_from_file"]], "buf_to_float() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.buf_to_float"]], "clip() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.clip"]], "cpsmidi() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.cpsmidi"]], "dbamp() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.dbamp"]], "device_info() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.device_info"]], "find_device() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.find_device"]], "linlin() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.linlin"]], "midicps() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.midicps"]], "normalize() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.normalize"]], "pya.helper.helpers": [[13, "module-pya.helper.helpers"]], "spectrum() (in module pya.helper.helpers)": [[13, "pya.helper.helpers.spectrum"]], "ampdb() (in module pya.helper)": [[14, "pya.helper.ampdb"]], "audio_from_file() (in module pya.helper)": [[14, "pya.helper.audio_from_file"]], "buf_to_float() (in module pya.helper)": [[14, "pya.helper.buf_to_float"]], "clip() (in module pya.helper)": [[14, "pya.helper.clip"]], "cpsmidi() (in module pya.helper)": [[14, "pya.helper.cpsmidi"]], "dbamp() (in module pya.helper)": [[14, "pya.helper.dbamp"]], "device_info() (in module pya.helper)": [[14, "pya.helper.device_info"]], "find_device() (in module pya.helper)": [[14, "pya.helper.find_device"]], "linlin() (in module pya.helper)": [[14, "pya.helper.linlin"]], "midicps() (in module pya.helper)": [[14, "pya.helper.midicps"]], "normalize() (in module pya.helper)": [[14, "pya.helper.normalize"]], "pya.helper": [[14, "module-pya.helper"]], "spectrum() (in module pya.helper)": [[14, "pya.helper.spectrum"]], "arecorder (class in pya)": [[15, "pya.Arecorder"]], "aserver (class in pya)": [[15, "pya.Aserver"]], "asig (class in pya)": [[15, "pya.Asig"]], "aspec (class in pya)": [[15, "pya.Aspec"]], "astft (class in pya)": [[15, "pya.Astft"]], "dummybackend (class in pya)": [[15, "pya.DummyBackend"]], "pyaudiobackend (class in pya)": [[15, "pya.PyAudioBackend"]], "ugen (class in pya)": [[15, "pya.Ugen"]], "__add__() (pya.asig method)": [[15, "pya.Asig.__add__"]], "__del__() (pya.aserver method)": [[15, "pya.Aserver.__del__"]], "__eq__() (pya.asig method)": [[15, "pya.Asig.__eq__"]], "__getitem__() (pya.asig method)": [[15, "pya.Asig.__getitem__"]], "__mul__() (pya.asig method)": [[15, "pya.Asig.__mul__"]], "__radd__() (pya.asig method)": [[15, "pya.Asig.__radd__"]], "__repr__() (pya.arecorder method)": [[15, "pya.Arecorder.__repr__"]], "__repr__() (pya.aserver method)": [[15, "pya.Aserver.__repr__"]], "__repr__() (pya.asig method)": [[15, "pya.Asig.__repr__"]], "__repr__() (pya.aspec method)": [[15, "pya.Aspec.__repr__"]], "__repr__() (pya.astft method)": [[15, "pya.Astft.__repr__"]], "__rmul__() (pya.asig method)": [[15, "pya.Asig.__rmul__"]], "__rsub__() (pya.asig method)": [[15, "pya.Asig.__rsub__"]], "__rtruediv__() (pya.asig method)": [[15, "pya.Asig.__rtruediv__"]], "__setitem__() (pya.asig method)": [[15, "pya.Asig.__setitem__"]], "__sub__() (pya.asig method)": [[15, "pya.Asig.__sub__"]], "__truediv__() (pya.asig method)": [[15, "pya.Asig.__truediv__"]], "_boot_delay (pya.pyaudiobackend attribute)": [[15, "pya.PyAudioBackend._boot_delay"]], "_load_audio_file() (pya.asig method)": [[15, "pya.Asig._load_audio_file"]], "_play_callback() (pya.aserver method)": [[15, "pya.Aserver._play_callback"]], "_recorder_callback() (pya.arecorder method)": [[15, "pya.Arecorder._recorder_callback"]], "_set_col_names() (pya.asig method)": [[15, "pya.Asig._set_col_names"]], "add() (pya.asig method)": [[15, "pya.Asig.add"]], "adsr() (pya.asig method)": [[15, "pya.Asig.adsr"]], "ampdb() (in module pya)": [[15, "pya.ampdb"]], "append() (pya.asig method)": [[15, "pya.Asig.append"]], "audio_from_file() (in module pya)": [[15, "pya.audio_from_file"]], "b (pya.asig property)": [[15, "pya.Asig.b"]], "boot() (pya.arecorder method)": [[15, "pya.Arecorder.boot"]], "boot() (pya.aserver method)": [[15, "pya.Aserver.boot"]], "bound (pya.asig attribute)": [[15, "pya.Asig.bound"]], "bs (pya.dummybackend attribute)": [[15, "pya.DummyBackend.bs"]], "bs (pya.pyaudiobackend attribute)": [[15, "pya.PyAudioBackend.bs"]], "buf_to_float() (in module pya)": [[15, "pya.buf_to_float"]], "channels (pya.asig attribute)": [[15, "pya.Asig.channels"]], "channels (pya.asig property)": [[15, "id0"]], "clip() (in module pya)": [[15, "pya.clip"]], "cn (pya.asig attribute)": [[15, "pya.Asig.cn"]], "cn (pya.asig property)": [[15, "id1"]], "cos() (pya.ugen method)": [[15, "pya.Ugen.cos"]], "cpsmidi() (in module pya)": [[15, "pya.cpsmidi"]], "custom() (pya.asig method)": [[15, "pya.Asig.custom"]], "dbamp() (in module pya)": [[15, "pya.dbamp"]], "default (pya.aserver attribute)": [[15, "pya.Aserver.default"]], "determine_backend() (in module pya)": [[15, "pya.determine_backend"]], "device (pya.arecorder property)": [[15, "pya.Arecorder.device"]], "device (pya.aserver property)": [[15, "pya.Aserver.device"]], "device_info() (in module pya)": [[15, "pya.device_info"]], "dtype (pya.dummybackend attribute)": [[15, "pya.DummyBackend.dtype"]], "envelope() (pya.asig method)": [[15, "pya.Asig.envelope"]], "extend (pya.asig attribute)": [[15, "pya.Asig.extend"]], "fade_in() (pya.asig method)": [[15, "pya.Asig.fade_in"]], "fade_out() (pya.asig method)": [[15, "pya.Asig.fade_out"]], "find_device() (in module pya)": [[15, "pya.find_device"]], "find_events() (pya.asig method)": [[15, "pya.Asig.find_events"]], "gain() (pya.asig method)": [[15, "pya.Asig.gain"]], "get_default_input_device_info() (pya.dummybackend method)": [[15, "pya.DummyBackend.get_default_input_device_info"]], "get_default_input_device_info() (pya.pyaudiobackend method)": [[15, "pya.PyAudioBackend.get_default_input_device_info"]], "get_default_output_device_info() (pya.dummybackend method)": [[15, "pya.DummyBackend.get_default_output_device_info"]], "get_default_output_device_info() (pya.pyaudiobackend method)": [[15, "pya.PyAudioBackend.get_default_output_device_info"]], "get_device_count() (pya.dummybackend method)": [[15, "pya.DummyBackend.get_device_count"]], "get_device_count() (pya.pyaudiobackend method)": [[15, "pya.PyAudioBackend.get_device_count"]], "get_device_info_by_index() (pya.dummybackend method)": [[15, "pya.DummyBackend.get_device_info_by_index"]], "get_device_info_by_index() (pya.pyaudiobackend method)": [[15, "pya.PyAudioBackend.get_device_info_by_index"]], "get_devices() (pya.aserver method)": [[15, "pya.Aserver.get_devices"]], "get_duration() (pya.asig method)": [[15, "pya.Asig.get_duration"]], "get_size() (pya.asig method)": [[15, "pya.Asig.get_size"]], "get_times() (pya.asig method)": [[15, "pya.Asig.get_times"]], "iirfilter() (pya.asig method)": [[15, "pya.Asig.iirfilter"]], "label (pya.asig attribute)": [[15, "pya.Asig.label"]], "linlin() (in module pya)": [[15, "pya.linlin"]], "midicps() (in module pya)": [[15, "pya.midicps"]], "mix_mode (pya.asig attribute)": [[15, "pya.Asig.mix_mode"]], "mono() (pya.asig method)": [[15, "pya.Asig.mono"]], "noise() (pya.ugen method)": [[15, "pya.Ugen.noise"]], "norm() (pya.asig method)": [[15, "pya.Asig.norm"]], "normalize() (in module pya)": [[15, "pya.normalize"]], "o (pya.asig property)": [[15, "pya.Asig.o"]], "open() (pya.dummybackend method)": [[15, "pya.DummyBackend.open"]], "open() (pya.pyaudiobackend method)": [[15, "pya.PyAudioBackend.open"]], "overlap_add() (pya.asig method)": [[15, "pya.Asig.overlap_add"]], "overwrite (pya.asig attribute)": [[15, "pya.Asig.overwrite"]], "pan2() (pya.asig method)": [[15, "pya.Asig.pan2"]], "pause() (pya.arecorder method)": [[15, "pya.Arecorder.pause"]], "play() (pya.aserver method)": [[15, "pya.Aserver.play"]], "play() (pya.asig method)": [[15, "pya.Asig.play"]], "plot() (pya.asig method)": [[15, "pya.Asig.plot"]], "plot() (pya.aspec method)": [[15, "pya.Aspec.plot"]], "plot() (pya.astft method)": [[15, "pya.Astft.plot"]], "plot_events() (pya.asig method)": [[15, "pya.Asig.plot_events"]], "plot_freqz() (pya.asig method)": [[15, "pya.Asig.plot_freqz"]], "plot_spectrum() (pya.asig method)": [[15, "pya.Asig.plot_spectrum"]], "process_buffer() (pya.dummybackend method)": [[15, "pya.DummyBackend.process_buffer"]], "process_buffer() (pya.pyaudiobackend method)": [[15, "pya.PyAudioBackend.process_buffer"]], "pya": [[15, "module-pya"]], "quit() (pya.aserver method)": [[15, "pya.Aserver.quit"]], "range (pya.dummybackend attribute)": [[15, "pya.DummyBackend.range"]], "record() (pya.arecorder method)": [[15, "pya.Arecorder.record"]], "remove_dc() (pya.asig method)": [[15, "pya.Asig.remove_DC"]], "resample() (pya.asig method)": [[15, "pya.Asig.resample"]], "reset() (pya.arecorder method)": [[15, "pya.Arecorder.reset"]], "rewire() (pya.asig method)": [[15, "pya.Asig.rewire"]], "rms() (pya.asig method)": [[15, "pya.Asig.rms"]], "samples (pya.asig property)": [[15, "pya.Asig.samples"]], "save_wavfile() (pya.asig method)": [[15, "pya.Asig.save_wavfile"]], "sawtooth() (pya.ugen method)": [[15, "pya.Ugen.sawtooth"]], "select_event() (pya.asig method)": [[15, "pya.Asig.select_event"]], "set_device() (pya.aserver method)": [[15, "pya.Aserver.set_device"]], "set_tracks() (pya.arecorder method)": [[15, "pya.Arecorder.set_tracks"]], "shift_channel() (pya.asig method)": [[15, "pya.Asig.shift_channel"]], "shutdown() (in module pya)": [[15, "pya.shutdown"]], "shutdown_default_server() (pya.aserver static method)": [[15, "pya.Aserver.shutdown_default_server"]], "sig (pya.asig attribute)": [[15, "pya.Asig.sig"]], "sine() (pya.ugen method)": [[15, "pya.Ugen.sine"]], "spectrogram() (pya.asig method)": [[15, "pya.Asig.spectrogram"]], "spectrum() (in module pya)": [[15, "pya.spectrum"]], "square() (pya.ugen method)": [[15, "pya.Ugen.square"]], "sr (pya.asig attribute)": [[15, "pya.Asig.sr"]], "startup() (in module pya)": [[15, "pya.startup"]], "startup_default_server() (pya.aserver static method)": [[15, "pya.Aserver.startup_default_server"]], "stereo() (pya.asig method)": [[15, "pya.Asig.stereo"]], "stop() (pya.arecorder method)": [[15, "pya.Arecorder.stop"]], "stop() (pya.aserver method)": [[15, "pya.Aserver.stop"]], "terminate() (pya.dummybackend method)": [[15, "pya.DummyBackend.terminate"]], "terminate() (pya.pyaudiobackend method)": [[15, "pya.PyAudioBackend.terminate"]], "to_sig() (pya.aspec method)": [[15, "pya.Aspec.to_sig"]], "to_sig() (pya.astft method)": [[15, "pya.Astft.to_sig"]], "to_spec() (pya.asig method)": [[15, "pya.Asig.to_spec"]], "to_stft() (pya.asig method)": [[15, "pya.Asig.to_stft"]], "weight() (pya.aspec method)": [[15, "pya.Aspec.weight"]], "window() (pya.asig method)": [[15, "pya.Asig.window"]], "window_op() (pya.asig method)": [[15, "pya.Asig.window_op"]], "x (pya.asig property)": [[15, "pya.Asig.x"]]}})