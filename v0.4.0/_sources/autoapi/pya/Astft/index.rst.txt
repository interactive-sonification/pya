:py:mod:`pya.Astft`
===================

.. py:module:: pya.Astft


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pya.Astft.Astft




Attributes
~~~~~~~~~~

.. autoapisummary::

   pya.Astft._LOGGER


.. py:data:: _LOGGER
   

   

.. py:class:: Astft(x, sr=None, label=None, window='hann', nperseg=256, noverlap=None, nfft=None, detrend=False, return_onesided=True, boundary='zeros', padded=True, cn=None)

   Audio spectrogram (STFT) class, attributes refers to scipy.signal.stft. With an addition
   attribute cn being the list of channel names, and label being the name of the Asig

   .. py:method:: to_sig(**kwargs)

      Create signal from stft, i.e. perform istft,
      kwargs overwrite Astft values for istft

      :param \*\*kwargs:
                         optional keyboard arguments used in istft:
                             'sr', 'window', 'nperseg', 'noverlap',
                             'nfft', 'input_onesided', 'boundary'.
                         also convert 'sr' to 'fs' since scipy uses 'fs' as sampling frequency.
      :type \*\*kwargs: str

      :returns: **_** -- Asig
      :rtype: Asig


   .. py:method:: plot(fn=lambda x: x, ax=None, offset=0, scale=1.0, xlim=None, ylim=None, show_bar=True, **kwargs)

      Plot spectrogram

      :param fn: a function, by default is bypass
      :type fn: func
      :param ch: By default it is None,
      :type ch: int or str or None
      :param ax: you can assign your plot to specific axes (Default value = None)
      :type ax: matplotlib.axes
      :param xlim: x_axis range (Default value = None)
      :type xlim: tuple or list
      :param ylim: y_axis range (Default value = None)
      :type ylim: tuple or list
      :param \*\*kwargs: keyward arguments of matplotlib's pcolormesh

      :returns: **_** -- self
      :rtype: Asig


   .. py:method:: __repr__()

      Return repr(self).



