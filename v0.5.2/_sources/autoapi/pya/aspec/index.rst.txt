:py:mod:`pya.aspec`
===================

.. py:module:: pya.aspec


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pya.aspec.Aspec




Attributes
~~~~~~~~~~

.. autoapisummary::

   pya.aspec._LOGGER


.. py:data:: _LOGGER

   

.. py:class:: Aspec(x: Union[pya.asig.Asig, numpy.ndarray], sr: int = 44100, label: Optional[str] = None, cn: Optional[list] = None)


   Audio spectrum class using rfft

   .. py:method:: get_duration()

      Return the duration in second.


   .. py:method:: to_sig()

      Convert Aspec into Asig


   .. py:method:: weight(weights: list, freqs=None, curve=1, kind='linear')

      TODO

      :param weights:
      :param freqs: (Default value = None)
      :param curve: (Default value = 1)
      :param kind: (Default value = 'linear')


   .. py:method:: plot(fn=np.abs, ax=None, offset=0, scale=1, xlim=None, ylim=None, **kwargs)

      Plot spectrum

      :param fn: function for processing the rfft spectrum. (Default value = np.abs)
      :type fn: func
      :param x_as_time: By default x axis display the time, if faulse display samples
      :type x_as_time: bool, optional
      :param xlim: Set x axis range (Default value = None)
      :type xlim: tuple or list or None
      :param ylim: Set y axis range (Default value = None)
      :type ylim: tuple or list or None
      :param offset: This is the absolute value each plot is shift vertically
                     to each other.
      :type offset: int or float
      :param scale: Scaling factor of the plot, use in multichannel plotting.
      :type scale: float
      :param \*\*kwargs: Keyword arguments for matplotlib.pyplot.plot()

      :returns: **_** -- self
      :rtype: Asig


   .. py:method:: __repr__()

      Return repr(self).



